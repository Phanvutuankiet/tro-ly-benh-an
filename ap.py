import streamlit as st
import google.generativeai as genai
import pyperclip 

# --- C·∫§U H√åNH BAN ƒê·∫¶U ---
st.set_page_config(page_title="Tr·ª£ l√Ω So·∫°n th·∫£o B·ªánh √°n", page_icon="ü©∫", layout="wide")
st.title("ü©∫ Tr·ª£ l√Ω So·∫°n th·∫£o B·ªánh √°n")
st.write("Nh·∫≠p th√¥ng tin b·ªánh nh√¢n, AI s·∫Ω gi√∫p b·∫°n so·∫°n m·ªôt b·∫£n nh√°p b·ªánh √°n ho√†n ch·ªânh, c√≥ ph√¢n t√≠ch v√† bi·ªán lu·∫≠n.")

# --- THI·∫æT L·∫¨P API KEY ---
try:
    genai.configure(api_key=st.secrets["GOOGLE_API_KEY"])
except Exception:
    st.error("L·ªói: Vui l√≤ng thi·∫øt l·∫≠p `GOOGLE_API_KEY` trong ph·∫ßn Secrets c·ªßa Streamlit ƒë·ªÉ ·ª©ng d·ª•ng ho·∫°t ƒë·ªông!")
    st.stop()

# --- C·∫¢I TI·∫æN 1: KH·ªûI T·∫†O SESSION STATE ---
# Gi√∫p l∆∞u l·∫°i k·∫øt qu·∫£ b·ªánh √°n ngay c·∫£ khi ng∆∞·ªùi d√πng thay ƒë·ªïi input
if "ket_qua_benh_an" not in st.session_state:
    st.session_state.ket_qua_benh_an = ""

def tao_prompt(data):
    """T·∫°o chu·ªói prompt ho√†n ch·ªânh t·ª´ d·ªØ li·ªáu b·ªánh nh√¢n."""
    return f"""
    # -- B·ªêI C·∫¢NH V√Ä VAI TR√í --
    B·∫°n l√† m·ªôt b√°c sƒ© n·ªôi tr√∫ c·∫©n th·∫≠n v√† d√†y d·∫°n kinh nghi·ªám, ƒëang ti·∫øn h√†nh bi·ªán lu·∫≠n ƒë·ªÉ tr√¨nh b√†y m·ªôt b·ªánh √°n...
    # (To√†n b·ªô n·ªôi dung prompt c·ªßa b·∫°n ·ªü ƒë√¢y)
    ...
    # -- D·ªÆ LI·ªÜU ƒê·∫¶U V√ÄO --
    - H·ªç v√† t√™n: {data['ho_ten']}
    - Tu·ªïi: {data['tuoi']}
    - Gi·ªõi t√≠nh: {data['gioi_tinh']}
    - Ngh·ªÅ nghi·ªáp: {data['nghe_nghiep']}
    - L√Ω do v√†o vi·ªán: {data['ly_do_vao_vien']}
    - B·ªánh s·ª≠: {data['benh_su']}
    - Ti·ªÅn cƒÉn: {data['tien_can']}
    - L∆∞·ª£c qua c√°c c∆° quan: {data['luoc_qua_cac_co_quan']}
    - Kh√°m th·ª±c th·ªÉ: {data['kham_thuc_the']}
    # ... (Ph·∫ßn c√≤n l·∫°i c·ªßa prompt)
    """

@st.cache_data(show_spinner=False)
def soan_thao_benh_an(_prompt):
    """H√†m g·ªçi API Gemini ƒë·ªÉ so·∫°n b·ªánh √°n, k·∫øt qu·∫£ s·∫Ω ƒë∆∞·ª£c cache l·∫°i."""
    try:
        model = genai.GenerativeModel('gemini-2.5-pro') 
        response = model.generate_content(_prompt)
        # C·∫¢I TI·∫æN 2: KI·ªÇM TRA K·∫æT QU·∫¢ TR·∫¢ V·ªÄ
        if response.text and response.text.strip():
            return response.text
        else:
            return "L·ªói: AI kh√¥ng tr·∫£ v·ªÅ n·ªôi dung h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i."
    except Exception as e:
        return f"ƒê√£ c√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi t·ªõi AI: {e}"

# --- GIAO DI·ªÜN NH·∫¨P LI·ªÜU ---
with st.form("benh_an_form"):
    st.header("1. Th√¥ng tin b·ªánh nh√¢n")
    col1, col2, col3 = st.columns(3)
    benh_nhan_data = {
        "ho_ten": col1.text_input("H·ªç v√† t√™n", "B·ªánh nh√¢n A"),
        "tuoi": col2.text_input("Tu·ªïi", "52"),
        "gioi_tinh": col3.selectbox("Gi·ªõi t√≠nh", ["Nam", "N·ªØ", "Kh√°c"]),
        "nghe_nghiep": st.text_input("Ngh·ªÅ nghi·ªáp", "C√¥ng nh√¢n"),
    }

    st.header("2. Th√¥ng tin y khoa")
    benh_nhan_data.update({
        "ly_do_vao_vien": st.text_area("L√Ω do v√†o vi·ªán", "ƒêau ng·ª±c tr√°i d·ªØ d·ªôi, kh√≥ th·ªü."),
        "benh_su": st.text_area("B·ªánh s·ª≠", "B·ªánh kh·ªüi ph√°t c√°ch ƒë√¢y 2 gi·ªù..."),
        "tien_can": st.text_area("Ti·ªÅn cƒÉn", "TƒÉng huy·∫øt √°p 10 nƒÉm..."),
        "luoc_qua_cac_co_quan": st.text_area("L∆∞·ª£c qua c√°c c∆° quan", "H√¥ h·∫•p: kh√¥ng ho..."),
        "kham_thuc_the": st.text_area("Kh√°m th·ª±c th·ªÉ", "Sinh hi·ªáu: M·∫°ch 88..."),
    })

    submitted = st.form_submit_button("‚öïÔ∏è So·∫°n th·∫£o B·ªánh √°n")

# --- X·ª¨ L√ù V√Ä HI·ªÇN TH·ªä K·∫æT QU·∫¢ ---
if submitted:
    final_prompt = tao_prompt(benh_nhan_data)
    with st.spinner("AI ƒëang ph√¢n t√≠ch v√† so·∫°n th·∫£o, vui l√≤ng ch·ªù..."):
        # C·∫≠p nh·∫≠t k·∫øt qu·∫£ v√†o session_state
        st.session_state.ket_qua_benh_an = soan_thao_benh_an(final_prompt)

# Lu√¥n hi·ªÉn th·ªã k·∫øt qu·∫£ cu·ªëi c√πng t·ª´ session_state
if st.session_state.ket_qua_benh_an:
    st.header("B·ªánh √°n ƒë∆∞·ª£c AI so·∫°n th·∫£o:")
    st.markdown(st.session_state.ket_qua_benh_an)

    if "L·ªói:" not in st.session_state.ket_qua_benh_an:
        if st.button("Sao ch√©p n·ªôi dung B·ªánh √°n"):
            pyperclip.copy(st.session_state.ket_qua_benh_an)
            st.success("ƒê√£ sao ch√©p v√†o clipboard!")
